<?php
/**
	* Site Settings Library
	* Allows site-wide settings to be easily stored in the database
	* 
	* @author 		Daniel Berkompas
	* @copyright	ClearSight Studio, 2011
	* @package		phpGenesis
	* @requires		phpActiveRecord, Forms Library
*/

	class SiteSetting extends AppModel {
		static $table_name = "site_settings";
		/* Database Structure:
				id						int
				name					varchar
				type					varchar
					dropdown
					boolean
					text
				options				text
				value					varchar
				group 				varchar	- to be used to order the items
		*/
	}
	
	/**
	 *	Pulls setting value or sets it if there is no setting by that name
	 *	
	 *	@return string
	 */ 
	if(!function_exists("site_setting")) {
		function site_setting($name, $default_value = "", $default_type = "text") {
			$site_setting = SiteSetting::find_by_name($name);
			if(!$site_setting) { // if there is a site setting with this name, create a new one with default value
				$site_setting = new SiteSetting();
				$site_setting->name = $name;
				$site_setting->type = $default_type;
				$site_setting->value = $default_value;
				$site_setting->save();
			}
			return $site_setting->value;
		}
	}
	
	/**
	 *	Prints out a form containing all of the site settings in the database.  Use with site_settings_save() to edit settings.
	 *	
	 *	@return bool
	 */
	if(!function_exists("site_settings_form")) {
		function site_settings_form() {
			load_library("form");
			
			$success = TRUE;
			$html = "";
			
			$site_settings = SiteSetting::all(array("order" => "group, name ASC"));
			$html .= form_open("site_settings"); // open a form
			
			// now, loop through all of the site settings
			foreach($site_settings as $setting) {
				
				// depending on the type of setting, use a different form control
				if($setting->type == "dropdown") { // dropdowns
					$options = explode("\n", $setting->options); // get the options by exploding new lines of options
					$html .= form_select($setting->name, $setting->name, $setting->value, $options); 
				
				} elseif($setting->type == "boolean") { // dropdown for booleans
					$html .= form_select($setting->name, $setting->name, $setting->value, array(0 => "No", 1 => "Yes"));
				
				} elseif($setting->type == "text") { // textbox for other values
					$html .= form_textbox($setting->name, $setting->name, $setting->value);
				}
			}
			
			$html .= form_close(); // close the form
			return $html;
		}
	}
	
	/**
	 *	Saves all of the settings from the settings form, generated by site_settings_form()
	 *	
	 *	@return string
	 */
	if(!function_exists("site_settings_save")) {
		function site_settings_save() {
			$success == true;
			if(form_posted("site_settings")) { 
				$site_settings = SiteSetting::all();
				foreach($site_settings as $setting) {
					$setting->value = form_validate($setting->name, "trim");
					if(!$setting->save()) $success == false;
				}
				return $success;
			}
		}
	}

?>